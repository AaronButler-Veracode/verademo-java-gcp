steps:
  - name: maven:3-jdk-8
    entrypoint: mvn
    args: ['package','-Dmaven.test.skip=true']
  - name: maven:3-jdk-8
    entrypoint: 'bash'
    args: ['-c', 'curl -sSL https://download.sourceclear.com/ci.sh | sh -s -- scan --recursive --update-advisor --debug']
#     env:
#     - 'SRCCLR_API_TOKEN=$${SRCCLR_API_TOKEN}'
    secretEnv: ['SRCCLR_API_TOKEN']
  - name: veracode/pipeline-scan:latest
    volumes:
    - name: 'vol1'
      path: '/home/luser'
    entrypoint: 'bash'
    args: ['-c', 'java -jar /opt/veracode/pipeline-scan.jar --veracode_api_id "$${VERACODE_ID}" --veracode_api_key "$${VERACODE_KEY}" --fail_on_severity="Very High, High" --file "/workspace/target/verademo.war"']
    secretEnv: ['VERACODE_ID', 'VERACODE_KEY']
    # The below directory is needed to account for the json output files. The Veracode docker user does not have permission 
    # to write directly to the workspace provided by google cloud. Need to work on method to persist the results file
    dir: '/home/luser'
  - name: 'ubuntu'
    volumes:
    - name: 'vol1'
      path: '/home/luser'
    args: ['cat', '/home/luser/results.json']
#   - name: veracode/api-wrapper-java:latest
#     entrypoint: 'bash'
#     args: [ '-c', 'java -jar /opt/veracode/api-wrapper.jar -vid "$${VERACODE_ID}" -vkey "$${VERACODE_KEY}" -action UploadAndScan -createprofile true -appname ${REPO_NAME} -version "${SHORT_SHA}_$(date +%F_%H:%M:%S)" -sandboxname "gcp testing" -createsandbox true  -scantimeout 30 -filepath ./target/verademo.war' ]
#     secretEnv: [ 'VERACODE_ID', 'VERACODE_KEY' ]
timeout: 900s
availableSecrets:
  secretManager:
    - versionName: projects/864317778079/secrets/VERACODE_ID/versions/latest
      env: 'VERACODE_ID'
    - versionName: projects/864317778079/secrets/VERACODE_KEY/versions/latest
      env: 'VERACODE_KEY'
    - versionName: projects/864317778079/secrets/SRCCLR_API_TOKEN/versions/latest
      env: 'SRCCLR_API_TOKEN'
